1. Why used Http POST instead of GET: GET has a character limit in the URI,
  and the transmitted root link may already have a character limit. Similar problem with text
I want to note that there are other solutions to this problem, but I chose the simplest option

2. Http status:
   404 Not Found - I suggest returning this error in several options.
   Firstly, if jsoup not found html Document on root link.
Secondly, after executing algorithm and load HTML document may returned error
   for example, “Too many redirects occurred while trying to load the URL”, may be preferably returned 410 Gone
   either 500 Internal server error

   400 Bad Request: return this error when validating the fields
   and if you do not fill in the required fields

3. What I wanted to do and did not have time, I wanted to implement `WebSocket` and `Spring Events`
   and to runtime return a result or error message
Second option to use message broker 'Kafka or RabbitMQ'
   The choice of broadcast manager depends on the amount of information processed.

4. Implement unit tests for this class `HtmlDocumentServiceImpl`, and use Spock annotation @Unroll
   it is possible to implement several cases in one test, so we implement several positive cases.
Next, we will need to check our service for error,
   for example, one of them error is MalformedURLException when we get a invalid URL

   For the `HtmlDocumentController` class implement component tests
   How and unit test we are implement positive cases and negative case.
   For negative case check Http status, example check status “Not Found”

   And implement integration tests for API

   I also suggest using the testing approach as:
   Equivalence classes -  if implement tests for all case,
   we have two problems
   Firstly tests may run a long time,
   Second, the more tests, the harder it is to support

5. Additionally:
   Needs set a limited number to create thread
   Implement validation root URL.
   create CI on Jenkins, and check the build of applications and to run tests